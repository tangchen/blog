{
  "hash": "b988afce9ef6e2cd2f1b99cfdf50bfaf",
  "result": {
    "markdown": "---\ntitle: \"Learning Python with Keen\"\nauthor: \"Chen Tang\"\nimage: \"python-logo.png\"\ndate: 2022-07-01\ncategories: [\"Life\", \"Python\"]\ndraft: false\n---\n\n\nMy older son, Keen, is six years old now and he's getting interested in coding. So I'm now working on a series of Jupyter notebooks that introduce him to Python.\n\nAlthough I'm more of an R user, I feel Python is a better language to start for kids.\n\n(Thanks to the `reticulate` package, I am able to write and run Python code within RStudio. Mad respect to whoever developed this package!)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n```\n:::\n\n\n## Session 1: Python Basics\n\n### 1. Numbers\n\n#### 1.1. Using Python as a calculator\n\n\n::: {.cell}\n\n```{.python .cell-code}\n1 + 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n538687445 + 3897886465\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n4436573910\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n6 - 3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n30 - 8\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n22\n```\n:::\n:::\n\n\n#### 1.2. Variables\n\nThe equals sign (\"=\") means assignment, e.g., $x = 1$ gives the value $1$ to variable $x$.\n\n\n::: {.cell}\n\n```{.python .cell-code}\n1 + 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nx = 1\ny = 5\n\nx + y\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nx = 3\n\nx + y\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nz = x - y\nz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n-2\n```\n:::\n:::\n\n\n**Your turn:** - Create two variables: a and b. Assign 5 to a, and 10 to b - Calculate the sum of a and b, save it to a third variable called c - Calculate $a \\times b$ (hint: In Python, the multiplication sign is \"\\*\" \\[asterisk\\]) - Calculate $a \\div b$ (The division sign is \"/\" \\[forward slash\\])\n\n\n::: {.cell}\n\n```{.python .cell-code}\na = 5\nb = 10\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nc = a + b\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\na * b\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n50\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\na / b\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.5\n```\n:::\n:::\n\n\n**Mini Project:**\n\nCalculate $1 + 2 + ... + 10$.\n\nHint:\n\n$$1 + 2 + ... + k = \\frac{k \\times (k + 1)}{2}$$\n\n(Why?)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# step 1: determine k\nk = 10\n\n# step 2: write the equation\nk * (k + 1) / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 55\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# defining a function to take any k value\ndef calc_sum(k):\n   s = k * (k + 1) / 2 \n   return s\n\ncalc_sum(k = 1_000_000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n500000500000.0\n```\n:::\n:::\n\n\n#### 1.3 Strings\n\n\n::: {.cell}\n\n```{.python .cell-code}\ns1 = \"hello\"\ns2 = \"Keen\"\n\nprint(s1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhello\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(s2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKeen\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(s1 + s2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhelloKeen\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(s1 + \", \" + s2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhello, Keen\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(s1 + \", \" + s2 + \"!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhello, Keen!\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(\"H\" + s1[1:5] + \", \" + s2 + \"!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, Keen!\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\na1 = \"4\"\nb5 = \"14\"\n\na1 + b5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'414'\n```\n:::\n:::\n\n\n**Project:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# tell me about you\nname = \"huijing\"\nage = 19\n\nprint(\"Hello, \" + name + \"! You are \" + str(age) + \" years old.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, huijing! You are 19 years old.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nname\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'huijing'\n```\n:::\n\n```{.python .cell-code}\n\"H\" + name[1:]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'Huijing'\n```\n:::\n:::\n\n\n#### 1.4 Lists\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfruits = [\"apple\", \"banana\", \"peach\"]\nkeen = [2, 4, 1]\nmom = [0, 1, 3]\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# how many bananas did Keen eat this week?\nprint(\"Keen ate \" + str(keen[1]) + \" bananas this week.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKeen ate 4 bananas this week.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# How many peaches did mon eat this week?\nprint(\"Mom ate \" + str(mom[2]) + \" peaches this week.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMom ate 3 peaches this week.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# How many bananas were eaten in total?\nprint(\"In total, \" + str(keen[1] + mom[1]) + \" were eaten this week\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIn total, 5 were eaten this week\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}